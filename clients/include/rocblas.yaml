# Data types are defined as either aliases to Python-recognized ctypes,
# or classes defined with base clases and attributes.
Datatypes:
  - rocblas_int: c_int
  - rocblas_datatype:
      bases: [ c_int ]
      attr: { f16_r: 150, f32_r: 151, f64_r: 152, f16_c: 153, f32_c: 154, f64_c: 155 }
  - { half: f16_r, float: f32_r, double: f64_r }
  - { half complex: f16_c, complex: f32_c, double complex: f64_c }


# The Arguments struct passed directly to C++. See clients/include/utility.h
# The order of the entries is significant, so it can't simply be a dictionary.
# The types on the RHS are eval'd for Python-recognized types including ctypes.
Arguments:
  - M: rocblas_int
  - N: rocblas_int
  - K: rocblas_int
  - lda: rocblas_int
  - ldb: rocblas_int
  - ldc: rocblas_int
  - ldd: rocblas_int
  - a_type: rocblas_datatype
  - b_type: rocblas_datatype
  - c_type: rocblas_datatype
  - d_type: rocblas_datatype
  - compute_type: rocblas_datatype
  - incx: rocblas_int
  - incy: rocblas_int
  - incd: rocblas_int
  - incb: rocblas_int
  - alpha: c_double
  - beta: c_double
  - transA: c_char
  - transB: c_char
  - side: c_char
  - uplo: c_char
  - diag: c_char
  - apiCallCount: rocblas_int
  - batch_count: rocblas_int
  - stride_a: rocblas_int
  - stride_b: rocblas_int
  - stride_c: rocblas_int
  - stride_d: rocblas_int
  - norm_check: rocblas_int
  - unit_check: rocblas_int
  - timing: rocblas_int
  - iters: rocblas_int
  - algo: c_uint
  - solution_index: c_int
  - flags: c_uint
  - workspace_size: c_size_t
  - function: c_char*32
  - name: c_char*32
  - category: c_char*32


# These named dictionary lists [ {dict1}, {dict2}, etc. ] supply subsets
# of test arguments in a structured way. The dictionaries are applied to
# each test case across the entire list, to generate combinations.
Dictionary lists to expand:
  - arguments
  - transA_transB
  - alpha_beta
  - matrix_size


# In case an array argument needs to be passed directly to C as an array,
# it needs to be listed here to avoid being expanded into multiple test
# cases with each of its elements.
Lists to not expand:
  - e.g., an array argument not to be expanded


# Defaults
Defaults:
  type: [ half, float, double ]
  category: nightly
  alpha: 1.0
  beta: 0.0
  incx: 1
  incy: 1
  incd: 1
  incb: 1
  side: L
  uplo: L
  diag: N
  apiCallCount: 1
  batch_count: 10
  norm_check: 0
  unit_check: 1
  iters: 10
  timing: 0
  algo: 0
  solution_index: 0
  flags: 0
  workspace_size: 0
