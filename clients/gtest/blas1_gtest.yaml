---
include: rocblas_common.yaml
include: known_bugs.yaml

Definitions:
  - &incx_incy_range
    - { incx:  1, incy:  1 }
    - { incx:  1, incy:  2 }
    - { incx:  2, incy:  1 }
    - { incx:  1, incy: -1 }
    - { incx: -1, incy:  1 }
    - { incx: -1, incy: -1 }

  - &alpha_beta_range
    - { alpha:  1.0, beta:  0.0 }
    - { alpha:  2.0, beta: -1.0 }

  - &alphai_betai_range
    - { alphai: 0.0 }
    - { alphai: 1.0}
    - { alphai: 2.0 }

Tests:
- name: blas1
  category: quick
  N: [ -1, 0, 5, 10, 500, 1000, 1024, 1025, 7111, 10000, 33792 ]
  incx_incy: *incx_incy_range
  alpha_beta: *alpha_beta_range
  alphai_betai: *alphai_betai_range
  function:
    - nrm2:  *single_double_precisions_complex_real
    - asum:  *single_double_precisions_complex_real
    - iamax: *single_double_precisions_complex_real
    - iamin: *single_double_precisions_complex_real
    - axpy:  *half_single_precisions_complex_real
    - copy:  *single_double_precisions_complex_real
    - dot:   *half_bfloat_single_double_complex_real_precisions
    - dotc:  *single_double_precisions_complex
    - scal:  *single_double_precisions_complex_real
    - scal:  *single_double_complex_real_in_complex_out
    - rot:   *rot_precisions
    - rotm:   *single_double_precisions_complex_real

- name: blas1
  category: pre_checkin
  N: [ 1048576, 1049600, 4000000, 8000000 ]
  incx_incy: *incx_incy_range
  alpha_beta: *alpha_beta_range
  alphai_betai: *alphai_betai_range
  function:
    - nrm2:  *double_precision_complex_real
    - asum:  *double_precision_complex_real
    - iamax: *single_double_precisions_complex_real
    - iamin: *single_double_precisions_complex_real
    - axpy:  *half_single_precisions_complex_real
    - copy:  *single_double_precisions_complex_real
    - dot:   *double_precision_complex_real
    - dotc:  *double_precision_complex_real
    - scal:  *single_double_precisions_complex_real
    - scal:  *single_double_complex_real_in_complex_out
    - rot:   *rot_precisions
    - rotm:   *single_double_precisions_complex_real

- name: blas1_batched
  category: quick
  N: [ -1, 0, 1025 ]
  batch_count: [-1, 0, 1]
  function: 
    - asum_batched: *single_double_precisions_complex_real
    - nrm2_batched: *single_double_precisions_complex_real
- name: blas1_batched
  category: pre_checkin
  N: [ 1025, 33792 ]
  incx: [1, 2]
  batch_count: [ 2, 33 ]
  function: 
    - asum_batched: *single_double_precisions_complex_real
    - nrm2_batched: *single_double_precisions_complex_real
- name: blas1_batched 
  category: nightly
  N: [ 300001 ]
  incx: [-1, 1, 2]
  batch_count: [ 65 ]
  function: 
    - asum_batched: *single_double_precisions_complex_real
    - nrm2_batched: *single_double_precisions_complex_real

- name: blas1_strided_batched
  category: quick
  N: [ -1, 0, 1025 ]
  incx: [-1, 0, 1]
  stride_scale: [ 1 ]
  batch_count: [-1, 0, 1]
  function: 
    - asum_strided_batched: *single_double_precisions_complex_real
    - nrm2_strided_batched: *single_double_precisions_complex_real
- name: blas1_strided_batched
  category: pre_checkin
  N: [ 513, 33792 ]
  incx: [1, 2]
  stride_scale: [ 1 ]
  batch_count: [ 2, 33 ]
  function: 
    - asum_strided_batched: *single_double_precisions_complex_real
    - nrm2_strided_batched: *single_double_precisions_complex_real
- name: blas1_strided_batched
  category: nightly
  N: [ 300001 ]
  incx: [-1, 1, 2]
  stride_scale: [ 1 ]
  batch_count: [ 65 ]
  function: 
    - asum_strided_batched: *single_double_precisions_complex_real
    - nrm2_strided_batched: *single_double_precisions_complex_real

- name: blas1_bad_arg
  category: pre_checkin
  function:
    - nrm2_bad_arg:  *single_double_precisions_complex_real
    - nrm2_batched_bad_arg:  *single_double_precisions_complex_real
    - nrm2_strided_batched_bad_arg:  *single_double_precisions_complex_real
    - asum_bad_arg:  *single_double_precisions_complex_real
    - asum_batched_bad_arg:  *single_double_precisions_complex_real
    - asum_strided_batched_bad_arg:  *single_double_precisions_complex_real
    - iamax_bad_arg: *single_double_precisions_complex_real
    - iamin_bad_arg: *single_double_precisions_complex_real
    - axpy_bad_arg:  *half_single_precisions_complex_real
    - copy_bad_arg:  *single_double_precisions_complex_real
    - dot_bad_arg:   *half_bfloat_single_double_complex_real_precisions
    - dotc_bad_arg:  *single_double_precisions_complex
    - scal_bad_arg:  *single_double_precisions_complex_real
    - scal_bad_arg:  *single_double_complex_real_in_complex_out
    - swap_bad_arg:  *single_double_precisions_complex_real
    - swap_batched_bad_arg:  *single_double_precisions_complex_real
    - swap_strided_batched_bad_arg:  *single_double_precisions_complex_real
    - rot_bad_arg:   *rot_precisions
    - rotg_bad_arg:  *rotg_precisions
    - rotm_bad_arg:  *single_double_precisions_complex_real
    - rotmg_bad_arg: *single_double_precisions_complex_real

- name: blas1
  category: quick
  function:
    - rotg:  *rotg_precisions
    - rotmg: *single_double_precisions_complex_real

# blas1 swap variants

- name: blas1_swap
  category: quick
  N: [ -1, 0, 1025] 
  incx: [ 1 ]
  incy: [ 1 ]
  function: 
    - swap: *single_double_precisions_complex_real

- name: blas1_swap
  category: pre_checkin
  N: [ 5000, 800000 ]
  incx_incy: *incx_incy_range
  function: 
    - swap: *single_double_precisions_complex_real

- name: blas1_swap_batched
  category: quick
  N: [ -1, 0, 1025] 
  incx: [ 1 ]
  incy: [ 1 ]
  batch_count: [-1, 0, 1]
  function: 
    - swap_batched: *single_double_precisions_complex_real

- name: blas1_swap_batched
  category: pre_checkin
  N: [ 5000, 800000 ]
  incx_incy: *incx_incy_range
  batch_count: [1, 7]
  function: 
    - swap_batched: *single_double_precisions_complex_real

- name: blas1_swap_strided_batched
  category: quick
  N: [ -1, 0, 1025] 
  incx: [ 1 ]
  incy: [ 1 ]
  batch_count: [-1, 0, 1]
  stride_scale: [ 0, 1 ]
  function:
    - swap_strided_batched: *single_double_precisions_complex_real

- name: blas1_swap_strided_batched
  category: pre_checkin
  N: [ 5000, 800000 ]
  incx_incy: *incx_incy_range
  batch_count: [1, 7] 
  stride_scale: [ 1 ]
  function:
    - swap_strided_batched: *single_double_precisions_complex_real
